apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "shinysorter.fullname" . }}-supabase-meta
spec:
  replicas: 1
  selector:
    matchLabels:
      app: supabase-meta
  template:
    metadata:
      labels:
        app: supabase-meta
    spec:
      {{ with .Values.supabase.meta }}
      {{ if .nodeSelector }}
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8}}
      {{ end }}
      {{ if .tolerations }}
      tolerations:
        {{- toYaml .tolerations | nindent 8}}
      {{ end }}
      {{ end }}
      terminationGracePeriodSeconds: 5
      initContainers:
      - name: wait-for-postgres
        image: busybox
        command:  ["sh", "-c", "until nc -w 5 -z supabase-postgres {{ .Values.supabase.postgresql.port }} > /dev/null; do echo Waiting for postgres.; sleep 2; done; echo 'PostgreSQL is up'"]
      containers:
      - name: meta
        image: supabase/postgres-meta:v0.52.1
        imagePullPolicy: IfNotPresent
        env:
        - name: PG_META_PORT
          value: "8080"
        - name: PG_META_DB_HOST
          value: {{ .Values.deploymentAddress }}
        - name: PG_META_DB_PORT
          value: "{{ .Values.supabase.postgresql.port }}"
        - name: PG_META_DB_NAME
          value: postgres
        - name: PG_META_DB_USER
          value: supabase_admin
        - name: PG_META_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: supabase-db-credentials
              key: postgresPassword
        ports:
        - name: meta
          containerPort: 8080
          protocol: TCP
        resources:
          {{- toYaml .Values.supabase.meta.resources | nindent 12}}
---
apiVersion: v1
kind: Service
metadata:
  name: supabase-meta
spec:
  ports:
    - name: meta
      targetPort: meta
      port: 8080
  selector:
    app: supabase-meta
  type: ClusterIP